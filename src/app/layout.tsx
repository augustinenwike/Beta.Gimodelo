"use client";

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import { AptosWalletAdapterProvider } from "@aptos-labs/wallet-adapter-react";
import { Network } from "@aptos-labs/ts-sdk";
import { useWallet } from '@aptos-labs/wallet-adapter-react';
import "@aptos-labs/wallet-adapter-ant-design/dist/index.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { wallets } = useWallet();
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AptosWalletAdapterProvider dappConfig={{
          network: Network.TESTNET,
            aptosApiKeys: {
              testnet: process.env.APTOS_API_KEY_TESTNET,
            }
          }}
          onError={(error) => {
            console.log("error", error);
          }} autoConnect={false}>
          {children}
        </AptosWalletAdapterProvider>
      </body>
    </html>
  );
}
